<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}Game | {{ data.title }}{% endblock %}</title>
    <link rel="icon" href="{% if icon starts with '/assets/' %}{{ 'http://' ~ host }}{% endif %}{{ asset('/assets/img/earth-icon.svg') }}">
    {% if bootstrap %}
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    {% endif %}
    <style>
        .game-img {
            background-position: center;
            background-size: 100%;
        }

        .game-title {
            top: 75px;
            font-size: 100px;
            width: 100%;
            text-align: center;
        }

        #game-body {
            display: none;
            transition: all 1s;
        }

        @keyframes fade-hide {
            from {
                opacity: 1;
            }
            to {
                opacity: 0;
            }
        }

        @keyframes fade-show {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }

        *.show {
            animation: fade-show 1s ease forwards;
        }

        *.hide {
            animation: fade-hide 1s ease forwards;
        }

        @keyframes img-guess-true {
            0% {
                box-shadow: none;
            }
            50% {
                box-shadow: 0 0 42px rgba(0, 250, 0, 0.33);
            }
            100% {
                box-shadow: none;
            }
        }

        @keyframes img-guess-false {
            0% {
                box-shadow: none;
            }
            50% {
                box-shadow: 0 0 42px rgba(250, 0, 0, 0.33);
            }
            100% {
                box-shadow: none;
            }
        }

        img.guess-true {
            transition: box-shadow 0.5s;
            animation: img-guess-true 1s ease forwards;
        }

        img.guess-false {
            transition: box-shadow 0.5s;
            animation: img-guess-false 1s ease forwards;
        }

        @keyframes progress-guess-true {
            0% {
                background-color: #0d6efd;
            }
            50% {
                background-color: #0B0;
            }
            100% {
                background-color: #0d6efd;
            }
        }

        @keyframes progress-guess-false {
            0% {
                background-color: #0d6efd;
            }
            50% {
                background-color: #B00;
            }
            100% {
                background-color: #0d6efd;
            }
        }

        .progress-bar.guess-true {
            transition: background-color 0.5s;
            animation: progress-guess-true 1s ease forwards;
        }

        .progress-bar.guess-false {
            transition: box-shadow 0.5s;
            animation: progress-guess-false 1s ease forwards;
        }

        .no-level-message, .no-level-message svg  {
            font-size: larger;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <main class="d-flex flex-column vh-100 align-items-center">
        {% block body %}
            <div class="container py-4">
                <header class="pb-3 mb-4 border-bottom">
                    <div class="d-flex align-items-center text-decoration-none">
                        <img src="{% if icon starts with '/assets/' %}{{ 'http://' ~ host }}{% endif %}{{ icon | default(asset('/assets/img/earth-icon.svg')) }}" alt="flag icon" width="50">
                        <span class="fs-3 px-2">{{ data.title }}</span>
                    </div>
                </header>

                {% if data.img is defined %}
                    <div class="game-img p-5 mb-4 bg-light rounded-3" style='background-image: url("{{ data.img }}")'>
                        <div class="container-fluid py-5 my-2" ></div>
                    </div>
                {% endif %}

                <div class="row align-items-md-stretch mb-4">
                    <div class="col-md-12">
                        <div class="card-mode h-100 p-5 text-bg-secondary rounded-3">
                            <h2>Description : </h2>
                            <p>{{ data.description }}</p>

                            {% if data.levels.toArray is empty %}
                                <div class="d-flex flex-row align-items-center">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-exclamation-diamond" viewBox="0 0 16 16">
                                        <path d="M6.95.435c.58-.58 1.52-.58 2.1 0l6.515 6.516c.58.58.58 1.519 0 2.098L9.05 15.565c-.58.58-1.519.58-2.098 0L.435 9.05a1.482 1.482 0 0 1 0-2.098L6.95.435zm1.4.7a.495.495 0 0 0-.7 0L1.134 7.65a.495.495 0 0 0 0 .7l6.516 6.516a.495.495 0 0 0 .7 0l6.516-6.516a.495.495 0 0 0 0-.7L8.35 1.134z"/>
                                        <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z"/>
                                    </svg>
                                    <p class="no-level-message m-0 px-2">This game has no levels for the moment, please come back later !</p>
                                </div>

                            {% endif %}

                            {% if data.levels.toArray is not empty %}
                                <h3>Level : </h3>
                                <select id="level-input" class="form-select" aria-label="select game">
                                    {% for option in data.levels.toArray %}
                                        <option value="{{ option.id }}-{{ option.difficulty }}" aria-describedby="{{ option.description }}">
                                            {{ option.label }}  [{{ option.difficulty }}]
                                        </option>
                                    {% endfor %}
                                </select>
                                <div id="level-desc"></div>
                            {% endif %}
                        </div>
                    </div>
                </div>
                {% if data.levels.toArray is not empty %}
                <div id="game-body">

                </div>

                <div class="row align-items-md-stretch">
                    <div class="col-md-6">
                        <div class="card-mode h-100 p-5 text-bg-dark rounded-3">
                            <h2>
                                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-person-fill" viewBox="0 0 16 16">
                                    <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z"/>
                                </svg>
                                Single Player
                            </h2>
                            <p>Play alone without score multiplier. Play now without delay!</p>
                            <button id="btn-single-play" class="btn btn-outline-light" type="button">Play</button>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card-mode h-100 p-5 bg-light border rounded-3">
                            <h2 class="text-dark">
                                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                                    <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7Zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216ZM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"/>
                                </svg>
                                Multi Player
                            </h2>
                            <p>Play with multiple players with a score multiplier based on the number of players, maximum number of players 8. Create a salon or join one !</p>
                            <button class="btn btn-outline-secondary" type="button" disabled>Create</button>
                            <button class="btn btn-outline-secondary" type="button" disabled>Join</button>
                        </div>
                    </div>
                </div>
                {% endif %}
            </div>
        {% endblock %}
    </main>

{% block javascripts %}
    {% if bootstrap %}
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    {% endif %}
    {% if script is defined %}
    <script>
        const userId = {{ user.id }};

        const levelSelect = document.getElementById('level-input')
        if (levelSelect) {
            const desc = levelSelect.options[levelSelect.options.selectedIndex].getAttribute('aria-describedby')
            if (desc) {
                document.getElementById('level-desc').innerHTML = `
                <div class="mt-2 p-2 bg-dark rounded-3">
                    <h4>Level Description :</h4>
                    <span class="p-2">${desc}</span>
                </div>`;
            }

            levelSelect.onchange = () => {
                const desc = levelSelect.options[levelSelect.options.selectedIndex].getAttribute('aria-describedby')
                if (desc) {
                    document.getElementById('level-desc').innerHTML = `
                    <div class="mt-2 p-2 bg-dark rounded-3">
                        <h4>Level Description :</h4>
                        <span class="p-2">${desc}</span>
                    </div>`;
                } else {
                    document.getElementById('level-desc').innerHTML = ''
                }
            }
        }
    </script>
    <script src="{% if icon starts with '/assets/' %}{{ 'http://' ~ host }}{% endif %}{{ asset(script) }}"></script>
    {% endif %}
{% endblock %}
</body>
</html>

